Your task is to count the number of ways to construct sum n by throwing a dice one or more times. Each throw produces an outcome between 1 and 6.

For example, if n=3, there are 4 ways:
```
 1+1+1
 1+2
 2+1
 3
```


Input

The only input line has an integer n.

Output

Print the number of ways modulo 10e9+7.

Constraints

    1≤n≤10e6


Example

Input:
3

Output:
4


- **PREREQUISITES**:
```
Minimal knowledge on what dp is.Please do refer to the conceptual section on dp if you are a beginner.
```

- **Solution**:

```
define:
dp[x] = number of ways to make sum x using numbers from 1 to 6.

Sum over the last number used to create x, it's some number between 1 and 6. For example, the number of ways to make sum x ending with a 3 is dp[x-3]. Summing over all the possibilities gives dp[x] = dp[x-1] + dp[x-2] + dp[x-3] + dp[x-4] + dp[x-5] + dp[x-6].

We initialize by dp[0] = 1, one way for getting a sum 0(use nothing).

we are good to go now.
```

- **TIME COMPLEXITY**:
```
O(n).
we only use one for loop to do this.
```
