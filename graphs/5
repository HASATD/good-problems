There are n pupils in Uolevi's class, and m friendships between them. Your task is to divide the pupils into two teams in such a way that no two pupils in a team are friends. You can freely choose the sizes of the teams.

Input

The first input line has two integers n and m: the number of pupils and friendships. The pupils are numbered 1,2,…,n.

Then, there are m lines describing the friendships. Each line has two integers a and b: pupils a and b are friends.

Every friendship is between two different pupils. You can assume that there is at most one friendship between any two pupils.

Output

Print an example of how to build the teams. For each pupil, print "1" or "2" depending on to which team the pupil will be assigned. You can print any valid team.

If there are no solutions, print "IMPOSSIBLE".

Constraints
```
1≤n≤105
1≤m≤2⋅105
1≤a,b≤n
```


Example
```
Input:
5 3
1 2
1 3
4 5

Output:
1 2 2 1 2
```

- **PREREQUISITES**:
```
Minimal knowledge on what graphs are.Please do refer to the conceptual section on graphs if you are a beginner.
You need to know search algorithms(traversal algorithms) to solve this problem.Greedy approach.
```

- **Solution**:

```
The question is about coloring the bipartite graphs.
we try to color all vertex greedily if vertex is not visited color
it white and run dfs . now color all its uncolored neighbors of white vertex
black and vice versa and run dfs on them.
at last check that each edge has ends with different colors.

we are good to go now.
```

- **TIME COMPLEXITY**:
```
 O(n+m) time, where n is number of vertices and m is the number of edges.

```
